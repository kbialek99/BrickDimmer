substitutions:
  name: BrickDimmer
  friendly_name: ESPHome

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: '1.0'

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  # Set up a wifi access point
  ap: {}

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

i2c:
  sda: 21
  scl: 22
  scan: True
  id: bus_a

sensor:
  - platform: bh1750
    name: "BH1750 Light Sensor"
    address: 0x23
    update_interval: 60s

# Define a GPIO switch to control pin 32
switch:
  - platform: gpio
    pin: GPIO23
    id: usb_power_switch
    name: "USB Power Switch"

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0  # Example button GPIO, replace with actual GPIO number
      mode: INPUT_PULLUP
      inverted: True
    name: "Button"
    on_press:
      then:
        - switch.toggle: usb_power_switch

# Optional: Web server for monitoring
web_server:
  port: 80